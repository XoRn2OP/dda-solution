Design and Analysis of Algorithms Using C Lab

QUESTION 1

#include <stdio.h>

void vubbleSort(int arr[], int n)
{
	int i, j, temp;
	for (i=0; i<n-1; i++)
	{
		for (j=0; j<(n-i-1); j++)
		{
			if (arr[j]>arr[j+1])
			{
				temp=arr[j];
				arr[j]= arr[j+1];
				arr[j+1]=temp;
			}
		}
	}
}
int main()
{
	int n,i;
	printf("Enter value of n : ");
	scanf("%d", &n);
	int arr[n];
	for(i=0; i<n; i++)
	{
		printf("Enter element for a[%d] : ", i);
		scanf("%d", &arr[i]);
	}
	printf("Before sorting the elements in the array are\n");
	for(i=0; i<n; i++)
	{
		printf("Value of a[%d] = %d\n", i, arr[i]);
	}
	vubbleSort(arr,n);
	printf("After sorting the elements in the array are\n");
	for (i=0; i<n; i++)
	{
		printf("Value of a[%d] = %d\n", i, arr[i]);
	}
	return 0;
}





QUESTION 2

#include<stdio.h>
#include<conio.h>
void swap(int arr[],int n1,int n2){
	int temp = arr[n1];
	arr[n1] = arr[n2];
	arr[n2] = temp;
}
void BUBBLESORT(int arr[], int len){
	for(int i = 0;i<len-1;i++){
		for(int j=0;j<len-i-1;j++){
			if(arr[j]>arr[j+1]){
				swap(arr,j,j+1);
			}
		}
	}
}
int binarySearch(int arr[],int l, int r, int x){
	if(r>=l){
		int mid = l + (r-l)/2;
		if(arr[mid]==x){
			return mid;
		}
		if(arr[mid]>x){
			return binarySearch(arr,l,mid-1,x);
		}
		return binarySearch(arr, mid+1,r,x);
	}
	return-1;
}

int main(){
	int n;
	int key;
	printf("Enter value of n : ");
	scanf("%d",&n);
	int arr[n];
	for(int i = 0;i<n;i++){
		printf("Enter element for a[%d] : ",i);
		scanf("%d",&arr[i]);
	}
	printf("Enter key element : ");
	scanf("%d",&key);
	printf("After sorting the elements in the array are\n");
	BUBBLESORT(arr,n);
	for(int i=0;i<n;i++){
		printf("Value of a[%d] = %d\n",i,arr[i]);
	}
	int result = binarySearch(arr,0,n-1,key);
	if(arr[result] == key ){
	printf("The key element %d is found at the position %d\n", key,result);
	}else{
		printf("The Key element %d is not found in the array\n",key);
	}
	
	
	return 0;
}



QUESTION 3


#include<stdio.h>
#include<conio.h>

void INSERTIONSORT(int arr[], int n)
{
	for(int i=0;i<n;i++)
	{
		int key = arr[i];
		int j = i-1;
		while((j>=0)&& (arr[j]>key))
		{
			arr[j+1]=arr[j];
			j--;
		}
		arr[j+1]=key;
	}
}
void printArray(int arr[],int n)
{
	for(int i =0; i<n;i++)
	{
		printf("Value of a[%d] = %d\n",i,arr[i]);
	}
}
int main()
{
	int n;
	printf("Enter value of n : ");
	scanf("%d",&n);
	int arr[n];
	for(int i=0;i<n;i++)
	{
		printf("Enter element for a[%d] : ",i);
		scanf("%d",&arr[i]);
	}
	printf("Before sorting the elements in the array are\n");
	printArray(arr,n);
	printf("After sorting the elements in the array are\n");
	INSERTIONSORT(arr,n);
	printArray(arr,n);
	
}



QUESTION 4


#include<stdio.h>
#include<conio.h>
int LINEARSEARCH(int arr[], int n, int key)
{
	for(int i=0;i<n;i++)
	{
		if(arr[i] == key)
		{
			return i;
		}
	}
}
int main()
{
	int n;
	printf("Enter value of n : ");
	scanf("%d",&n);
	int arr[n];
	for(int i=0;i<n;i++)
	{
		printf("Enter element for a[%d] : ",i);
		scanf("%d",&arr[i]);
	}
	int key;
	printf("Enter key element : ");
	scanf("%d",&key);
	int res= LINEARSEARCH(arr,n,key);
	if(arr[res] == key)
	{
		printf("The key element %d is found at the position %d\n",key,res);
	}
	else
	{
		printf("The key element %d is not found in the array\n",key);
	}
	
}









